@use './m2-radio';
@use '../core/tokens/token-utils';
@use '../core/style/layout-common';
@use './radio-common';

$token-prefix: m2-radio.$prefix;
$token-slots: m2-radio.get-token-slots();

.mat-mdc-radio-button {
  -webkit-tap-highlight-color: transparent;

  @include radio-common.radio-structure(true);
  @include radio-common.radio-noop-animations();

  @include token-utils.use-tokens($token-prefix, $token-slots) {
    .mdc-radio__background::before {
      background-color: token-utils.slot(ripple-color);
    }

    &.mat-mdc-radio-checked {
      .mat-ripple-element,
      .mdc-radio__background::before {
        background-color: token-utils.slot(checked-ripple-color);
      }
    }

    &.mat-mdc-radio-disabled-interactive .mdc-radio--disabled {
      .mat-ripple-element,
      .mdc-radio__background::before {
        background-color: token-utils.slot(ripple-color);
      }
    }

    .mat-internal-form-field {
      color: token-utils.slot(label-text-color);
      font-family: token-utils.slot(label-text-font);
      line-height: token-utils.slot(label-text-line-height);
      font-size: token-utils.slot(label-text-size);
      letter-spacing: token-utils.slot(label-text-tracking);
      font-weight: token-utils.slot(label-text-weight);
    }

    .mdc-radio--disabled + label {
      color: token-utils.slot(disabled-label-color);
    }
  }

  // This is necessary because we do not depend on MDC's ripple, but have our own that should be
  // positioned correctly. This can be removed once we start using MDC's ripple implementation.
  .mat-radio-ripple {
    @include layout-common.fill;
    pointer-events: none;
    border-radius: 50%;

    > .mat-ripple-element {
      opacity: 0.14;
    }

    &::before {
      border-radius: 50%;
    }
  }

  // We don't inherit the border focus style from MDC since we don't use their ripple.
  // Instead we need to replicate it here.
  @include token-utils.use-tokens($token-prefix, $token-slots) {
    .mdc-radio > .mdc-radio__native-control:focus:enabled:not(:checked) {
      & ~ .mdc-radio__background > .mdc-radio__outer-circle {
        border-color: token-utils.slot(unselected-focus-icon-color);
      }
    }
  }


  // For radios render the focus indicator when we know
  // the hidden input is focused (slightly different for each control).
  &.cdk-focused .mat-focus-indicator::before {
    content: '';
  }
}

.mat-mdc-radio-disabled {
  cursor: default;
  pointer-events: none;

  &.mat-mdc-radio-disabled-interactive {
    pointer-events: auto;
  }
}

// Element used to provide a larger tap target for users on touch devices.
.mat-mdc-radio-touch-target {
  position: absolute;
  top: 50%;
  left: 50%;
  height: 48px;
  width: 48px;
  transform: translate(-50%, -50%);

  @include token-utils.use-tokens($token-prefix, $token-slots) {
    display: token-utils.slot(touch-target-display);
  }

  [dir='rtl'] & {
    left: auto;
    right: 50%;
    transform: translate(50%, -50%);
  }
}

@use 'sass:map';
@use '../core/style/sass-utils';
@use '../core/tokens/m3-utils';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, checkbox);

/// Generates custom tokens for mat-checkbox.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of custom tokens for mat-checkbox
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $tokens: (
    disabled-label-color:
        sass-utils.safe-color-change(map.get($systems, md-sys-color, on-surface), $alpha: 0.38),
    disabled-selected-checkmark-color: map.get($systems, md-sys-color, surface),
    disabled-selected-icon-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-surface), $alpha: 0.38),
    disabled-unselected-icon-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-surface), $alpha: 0.38),
    label-text-color: map.get($systems, md-sys-color, on-surface),
    label-text-font: map.get($systems, md-sys-typescale, body-medium-font),
    label-text-line-height: map.get($systems, md-sys-typescale, body-medium-line-height),
    label-text-size: map.get($systems, md-sys-typescale, body-medium-size),
    label-text-tracking: map.get($systems, md-sys-typescale, body-medium-tracking),
    label-text-weight: map.get($systems, md-sys-typescale, body-medium-weight),
    selected-checkmark-color: map.get($systems, md-sys-color, on-primary),
    selected-focus-icon-color: map.get($systems, md-sys-color, primary),
    selected-focus-state-layer-color: map.get($systems, md-sys-color, primary),
    selected-focus-state-layer-opacity: map.get($systems, md-sys-state, focus-state-layer-opacity),
    selected-hover-icon-color: map.get($systems, md-sys-color, primary),
    selected-hover-state-layer-color: map.get($systems, md-sys-color, primary),
    selected-hover-state-layer-opacity: map.get($systems, md-sys-state, hover-state-layer-opacity),
    selected-icon-color: map.get($systems, md-sys-color, primary),
    selected-pressed-icon-color: map.get($systems, md-sys-color, primary),
    selected-pressed-state-layer-color: map.get($systems, md-sys-color, on-surface),
    selected-pressed-state-layer-opacity:
        map.get($systems, md-sys-state, pressed-state-layer-opacity),
    state-layer-size: if($exclude-hardcoded, null, 40px),
    unselected-focus-icon-color: map.get($systems, md-sys-color, on-surface),
    unselected-focus-state-layer-color: map.get($systems, md-sys-color, on-surface),
    unselected-focus-state-layer-opacity:
        map.get($systems, md-sys-state, focus-state-layer-opacity),
    unselected-hover-icon-color: map.get($systems, md-sys-color, on-surface),
    unselected-hover-state-layer-color: map.get($systems, md-sys-color, on-surface),
    unselected-hover-state-layer-opacity:
        map.get($systems, md-sys-state, hover-state-layer-opacity),
    unselected-icon-color: map.get($systems, md-sys-color, on-surface-variant),
    unselected-pressed-state-layer-color: map.get($systems, md-sys-color, primary),
    unselected-pressed-state-layer-opacity:
        map.get($systems, md-sys-state, pressed-state-layer-opacity),
  );

  $variant-tokens: (
    primary: (), // Default, no overrides needed
    secondary: (
      selected-focus-icon-color: map.get($systems, md-sys-color, secondary),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-hover-icon-color: map.get($systems, md-sys-color, secondary),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-icon-color: map.get($systems, md-sys-color, secondary),
      selected-pressed-icon-color: map.get($systems, md-sys-color, secondary),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-checkmark-color: map.get($systems, md-sys-color, on-secondary),
    ),
    tertiary: (
      selected-focus-icon-color: map.get($systems, md-sys-color, tertiary),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-hover-icon-color: map.get($systems, md-sys-color, tertiary),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-icon-color: map.get($systems, md-sys-color, tertiary),
      selected-pressed-icon-color: map.get($systems, md-sys-color, tertiary),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-checkmark-color: map.get($systems, md-sys-color, on-tertiary),
    ),
    error: (
      selected-focus-icon-color: map.get($systems, md-sys-color, error),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, error),
      selected-hover-icon-color: map.get($systems, md-sys-color, error),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, error),
      selected-icon-color: map.get($systems, md-sys-color, error),
      selected-pressed-icon-color: map.get($systems, md-sys-color, error),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, error),
      selected-checkmark-color: map.get($systems, md-sys-color, on-error),
    )
  );

  @return m3-utils.namespace($prefix, ($tokens, $variant-tokens), $token-slots);
}

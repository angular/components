@use 'sass:map';
@use 'sass:meta';
@use '../../token-definition';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, outlined-button);

/// Generates the tokens for MDC outlined-button
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of tokens for the MDC outlined-button
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $mdc-tokens: values($systems, $exclude-hardcoded);
  $variant-tokens: (
    primary: (), // Default, no overrides needed.
    secondary: (
      focus-label-text-color: map.get($systems, md-sys-color, secondary),
      focus-outline-color: map.get($systems, md-sys-color, secondary),
      focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      hover-label-text-color: map.get($systems, md-sys-color, secondary),
      hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      label-text-color: map.get($systems, md-sys-color, secondary),
      pressed-label-text-color: map.get($systems, md-sys-color, secondary),
      pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-icon-color: map.get($systems, md-sys-color, secondary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, secondary)
    ),
    tertiary: (
      focus-label-text-color: map.get($systems, md-sys-color, tertiary),
      focus-outline-color: map.get($systems, md-sys-color, tertiary),
      focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      hover-label-text-color: map.get($systems, md-sys-color, tertiary),
      hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      label-text-color: map.get($systems, md-sys-color, tertiary),
      pressed-label-text-color: map.get($systems, md-sys-color, tertiary),
      pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-icon-color: map.get($systems, md-sys-color, tertiary),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, tertiary)
    ),
    error: (
      focus-label-text-color: map.get($systems, md-sys-color, error),
      focus-outline-color: map.get($systems, md-sys-color, error),
      focus-state-layer-color: map.get($systems, md-sys-color, error),
      hover-label-text-color: map.get($systems, md-sys-color, error),
      hover-state-layer-color: map.get($systems, md-sys-color, error),
      label-text-color: map.get($systems, md-sys-color, error),
      pressed-label-text-color: map.get($systems, md-sys-color, error),
      pressed-state-layer-color: map.get($systems, md-sys-color, error),
      with-icon-focus-icon-color: map.get($systems, md-sys-color, error),
      with-icon-hover-icon-color: map.get($systems, md-sys-color, error),
      with-icon-icon-color: map.get($systems, md-sys-color, error),
      with-icon-pressed-icon-color: map.get($systems, md-sys-color, error)
    )
  );

  @return token-definition.namespace-tokens($prefix, (
    _fix-tokens($mdc-tokens),
    token-definition.map-values($variant-tokens, meta.get-function(_fix-tokens))
  ), $token-slots);
}

/// Fixes inconsistent values in the outlined button tokens so that they can produce valid styles.
/// @param {Map} $initial-tokens Map of outlined button tokens currently being generated.
/// @return {Map} The given tokens, with the invalid values replaced with valid ones.
@function _fix-tokens($initial-tokens) {
  $hardcoded-tokens: values((), false);

  @return token-definition.combine-color-tokens($initial-tokens, $hardcoded-tokens, (
    (
      color: disabled-label-text-color,
      opacity: disabled-label-text-opacity,
    ),
    (
      color: disabled-outline-color,
      opacity: disabled-outline-opacity,
    )
  ));
}

@function values($deps, $exclude-hardcoded-values: false) {
  @return (
    container-height: if($exclude-hardcoded-values, null, 40px),
    container-shape: map.get($deps, md-sys-shape, corner-full),
    disabled-label-text-color: map.get($deps, md-sys-color, on-surface),
    disabled-label-text-opacity: if($exclude-hardcoded-values, null, 0.38),
    disabled-outline-color: map.get($deps, md-sys-color, on-surface),
    disabled-outline-opacity: if($exclude-hardcoded-values, null, 0.12),
    focus-label-text-color: map.get($deps, md-sys-color, primary),
    focus-outline-color: map.get($deps, md-sys-color, primary),
    focus-state-layer-color: map.get($deps, md-sys-color, primary),
    focus-state-layer-opacity: map.get($deps, md-sys-state, focus-state-layer-opacity),
    hover-label-text-color: map.get($deps, md-sys-color, primary),
    hover-outline-color: map.get($deps, md-sys-color, outline),
    hover-state-layer-color: map.get($deps, md-sys-color, primary),
    hover-state-layer-opacity: map.get($deps, md-sys-state, hover-state-layer-opacity),
    label-text-color: map.get($deps, md-sys-color, primary),
    label-text-font: map.get($deps, md-sys-typescale, label-large-font),
    label-text-line-height: map.get($deps, md-sys-typescale, label-large-line-height),
    label-text-size: map.get($deps, md-sys-typescale, label-large-size),
    label-text-tracking: map.get($deps, md-sys-typescale, label-large-tracking),
    // Warning: risk of reduced fidelity from using this composite typography token.
    // Tokens md.comp.outlined-button.label-text.tracking cannot be represented in the
    // "font" property shorthand. Consider using the discrete properties instead.
    label-text-type: if(
        $exclude-hardcoded-values,
        null,
        map.get($deps, md-sys-typescale, label-large-weight)
        map.get($deps, md-sys-typescale, label-large-size) #{'/'} map.get(
            $deps,
            md-sys-typescale,
            label-large-line-height
        ) map.get($deps, md-sys-typescale, label-large-font)
    ),
    label-text-weight: map.get($deps, md-sys-typescale, label-large-weight),
    outline-color: map.get($deps, md-sys-color, outline),
    outline-width: if($exclude-hardcoded-values, null, 1px),
    pressed-label-text-color: map.get($deps, md-sys-color, primary),
    pressed-outline-color: map.get($deps, md-sys-color, outline),
    pressed-state-layer-color: map.get($deps, md-sys-color, primary),
    pressed-state-layer-opacity: map.get($deps, md-sys-state, pressed-state-layer-opacity),
    with-icon-disabled-icon-color: map.get($deps, md-sys-color, on-surface),
    with-icon-disabled-icon-opacity: if($exclude-hardcoded-values, null, 0.38),
    with-icon-focus-icon-color: map.get($deps, md-sys-color, primary),
    with-icon-hover-icon-color: map.get($deps, md-sys-color, primary),
    with-icon-icon-color: map.get($deps, md-sys-color, primary),
    with-icon-icon-size: if($exclude-hardcoded-values, null, 18px),
    with-icon-pressed-icon-color: map.get($deps, md-sys-color, primary)
  );
}

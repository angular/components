@use 'sass:map';
@use '../../../style/elevation';
@use '../../token-definition';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, fab-small);

/// Generates the tokens for MDC fab-small
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of tokens for the MDC fab-small
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $tokens: primary-values($systems, $exclude-hardcoded);
  $elevation-tokens: (
    container-elevation,
    focus-container-elevation,
    hover-container-elevation,
    pressed-container-elevation,
  );

  @each $token in $elevation-tokens {
    $elevation: map.get($tokens, $token);

    @if ($elevation != null) {
      $tokens: map.set($tokens, $token + -shadow, elevation.get-box-shadow($elevation));
    }
  }

  $variant-tokens: (
    // Color variants
    primary: (), // Default, no overrides needed.
    secondary: secondary-values($systems, $exclude-hardcoded),
    tertiary: tertiary-values($systems, $exclude-hardcoded)
  );

  @return token-definition.namespace-tokens(
      $prefix, ($tokens, $variant-tokens), $token-slots);
}

@function primary-values($deps, $exclude-hardcoded-values: false) {
  @return (
    container-color: map.get($deps, md-sys-color, primary-container),
    container-elevation: map.get($deps, md-sys-elevation, level3),
    container-height: if($exclude-hardcoded-values, null, 40px),
    container-shadow-color: map.get($deps, md-sys-color, shadow),
    container-shape: map.get($deps, md-sys-shape, corner-medium),
    container-width: if($exclude-hardcoded-values, null, 40px),
    focus-container-elevation: map.get($deps, md-sys-elevation, level3),
    focus-icon-color: map.get($deps, md-sys-color, on-primary-container),
    focus-state-layer-color: map.get($deps, md-sys-color, on-primary-container),
    focus-state-layer-opacity: map.get($deps, md-sys-state, focus-state-layer-opacity),
    hover-container-elevation: map.get($deps, md-sys-elevation, level4),
    hover-icon-color: map.get($deps, md-sys-color, on-primary-container),
    hover-state-layer-color: map.get($deps, md-sys-color, on-primary-container),
    hover-state-layer-opacity: map.get($deps, md-sys-state, hover-state-layer-opacity),
    icon-color: map.get($deps, md-sys-color, on-primary-container),
    icon-size: if($exclude-hardcoded-values, null, 24px),
    lowered-container-elevation: map.get($deps, md-sys-elevation, level1),
    lowered-focus-container-elevation: map.get($deps, md-sys-elevation, level1),
    lowered-hover-container-elevation: map.get($deps, md-sys-elevation, level2),
    lowered-pressed-container-elevation: map.get($deps, md-sys-elevation, level1),
    pressed-container-elevation: map.get($deps, md-sys-elevation, level3),
    pressed-icon-color: map.get($deps, md-sys-color, on-primary-container),
    pressed-state-layer-color: map.get($deps, md-sys-color, on-primary-container),
    pressed-state-layer-opacity: map.get($deps, md-sys-state, pressed-state-layer-opacity)
  );
}

@function secondary-values($deps, $exclude-hardcoded-values: false) {
  @return (
    container-color: map.get($deps, md-sys-color, secondary-container),
    container-elevation: map.get($deps, md-sys-elevation, level3),
    container-height: if($exclude-hardcoded-values, null, 40px),
    container-shadow-color: map.get($deps, md-sys-color, shadow),
    container-shape: map.get($deps, md-sys-shape, corner-medium),
    container-width: if($exclude-hardcoded-values, null, 40px),
    focus-container-elevation: map.get($deps, md-sys-elevation, level3),
    focus-icon-color: map.get($deps, md-sys-color, on-secondary-container),
    focus-state-layer-color: map.get($deps, md-sys-color, on-secondary-container),
    focus-state-layer-opacity: map.get($deps, md-sys-state, focus-state-layer-opacity),
    hover-container-elevation: map.get($deps, md-sys-elevation, level4),
    hover-icon-color: map.get($deps, md-sys-color, on-secondary-container),
    hover-state-layer-color: map.get($deps, md-sys-color, on-secondary-container),
    hover-state-layer-opacity: map.get($deps, md-sys-state, hover-state-layer-opacity),
    icon-color: map.get($deps, md-sys-color, on-secondary-container),
    icon-size: if($exclude-hardcoded-values, null, 24px),
    lowered-container-elevation: map.get($deps, md-sys-elevation, level1),
    lowered-focus-container-elevation: map.get($deps, md-sys-elevation, level1),
    lowered-hover-container-elevation: map.get($deps, md-sys-elevation, level2),
    lowered-pressed-container-elevation: map.get($deps, md-sys-elevation, level1),
    pressed-container-elevation: map.get($deps, md-sys-elevation, level3),
    pressed-icon-color: map.get($deps, md-sys-color, on-secondary-container),
    pressed-state-layer-color: map.get($deps, md-sys-color, on-secondary-container),
    pressed-state-layer-opacity: map.get($deps, md-sys-state, pressed-state-layer-opacity)
  );
}

@function tertiary-values($deps, $exclude-hardcoded-values: false) {
  @return (
    container-color: map.get($deps, md-sys-color, tertiary-container),
    container-elevation: map.get($deps, md-sys-elevation, level3),
    container-height: if($exclude-hardcoded-values, null, 40px),
    container-shadow-color: map.get($deps, md-sys-color, shadow),
    container-shape: map.get($deps, md-sys-shape, corner-medium),
    container-width: if($exclude-hardcoded-values, null, 40px),
    focus-container-elevation: map.get($deps, md-sys-elevation, level3),
    focus-icon-color: map.get($deps, md-sys-color, on-tertiary-container),
    focus-state-layer-color: map.get($deps, md-sys-color, on-tertiary-container),
    focus-state-layer-opacity: map.get($deps, md-sys-state, focus-state-layer-opacity),
    hover-container-elevation: map.get($deps, md-sys-elevation, level4),
    hover-icon-color: map.get($deps, md-sys-color, on-tertiary-container),
    hover-state-layer-color: map.get($deps, md-sys-color, on-tertiary-container),
    hover-state-layer-opacity: map.get($deps, md-sys-state, hover-state-layer-opacity),
    icon-color: map.get($deps, md-sys-color, on-tertiary-container),
    icon-size: if($exclude-hardcoded-values, null, 24px),
    lowered-container-elevation: map.get($deps, md-sys-elevation, level1),
    lowered-focus-container-elevation: map.get($deps, md-sys-elevation, level1),
    lowered-hover-container-elevation: map.get($deps, md-sys-elevation, level2),
    lowered-pressed-container-elevation: map.get($deps, md-sys-elevation, level1),
    pressed-container-elevation: map.get($deps, md-sys-elevation, level3),
    pressed-icon-color: map.get($deps, md-sys-color, on-tertiary-container),
    pressed-state-layer-color: map.get($deps, md-sys-color, on-tertiary-container),
    pressed-state-layer-opacity: map.get($deps, md-sys-state, pressed-state-layer-opacity)
  );
}

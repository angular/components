@use 'sass:map';
@use '../../token-definition';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, radio);

/// Generates the tokens for MDC radio
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of tokens for the MDC radio
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $mdc-tokens: values($systems, $exclude-hardcoded);
  $variant-tokens: (
    primary: (), // Default, no overrides needed
    secondary: (
      selected-focus-icon-color: map.get($systems, md-sys-color, secondary),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-hover-icon-color: map.get($systems, md-sys-color, secondary),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, secondary),
      selected-icon-color: map.get($systems, md-sys-color, secondary),
      selected-pressed-icon-color: map.get($systems, md-sys-color, secondary),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, secondary),
    ),
    tertiary: (
      selected-focus-icon-color: map.get($systems, md-sys-color, tertiary),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-hover-icon-color: map.get($systems, md-sys-color, tertiary),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, tertiary),
      selected-icon-color: map.get($systems, md-sys-color, tertiary),
      selected-pressed-icon-color: map.get($systems, md-sys-color, tertiary),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, tertiary),
    ),
    error: (
      selected-focus-icon-color: map.get($systems, md-sys-color, error),
      selected-focus-state-layer-color: map.get($systems, md-sys-color, error),
      selected-hover-icon-color: map.get($systems, md-sys-color, error),
      selected-hover-state-layer-color: map.get($systems, md-sys-color, error),
      selected-icon-color: map.get($systems, md-sys-color, error),
      selected-pressed-icon-color: map.get($systems, md-sys-color, error),
      unselected-pressed-state-layer-color: map.get($systems, md-sys-color, error),
    ),
  );

  @return token-definition.namespace-tokens(
      $prefix, ($mdc-tokens, $variant-tokens), $token-slots);
}

@function values($deps, $exclude-hardcoded-values: false) {
  @return (
    disabled-selected-icon-color: map.get($deps, md-sys-color, on-surface),
    disabled-selected-icon-opacity: if($exclude-hardcoded-values, null, 0.38),
    disabled-unselected-icon-color: map.get($deps, md-sys-color, on-surface),
    disabled-unselected-icon-opacity: if($exclude-hardcoded-values, null, 0.38),
    icon-size: if($exclude-hardcoded-values, null, 20px),
    selected-focus-icon-color: map.get($deps, md-sys-color, primary),
    selected-focus-state-layer-color: map.get($deps, md-sys-color, primary),
    selected-focus-state-layer-opacity: map.get($deps, md-sys-state, focus-state-layer-opacity),
    selected-hover-icon-color: map.get($deps, md-sys-color, primary),
    selected-hover-state-layer-color: map.get($deps, md-sys-color, primary),
    selected-hover-state-layer-opacity: map.get($deps, md-sys-state, hover-state-layer-opacity),
    selected-icon-color: map.get($deps, md-sys-color, primary),
    selected-pressed-icon-color: map.get($deps, md-sys-color, primary),
    selected-pressed-state-layer-color: map.get($deps, md-sys-color, on-surface),
    selected-pressed-state-layer-opacity: map.get($deps, md-sys-state, pressed-state-layer-opacity),
    state-layer-size: if($exclude-hardcoded-values, null, 40px),
    unselected-focus-icon-color: map.get($deps, md-sys-color, on-surface),
    unselected-focus-state-layer-color: map.get($deps, md-sys-color, on-surface),
    unselected-focus-state-layer-opacity: map.get($deps, md-sys-state, focus-state-layer-opacity),
    unselected-hover-icon-color: map.get($deps, md-sys-color, on-surface),
    unselected-hover-state-layer-color: map.get($deps, md-sys-color, on-surface),
    unselected-hover-state-layer-opacity: map.get($deps, md-sys-state, hover-state-layer-opacity),
    unselected-icon-color: map.get($deps, md-sys-color, on-surface-variant),
    unselected-pressed-icon-color: map.get($deps, md-sys-color, on-surface),
    unselected-pressed-state-layer-color: map.get($deps, md-sys-color, primary),
    unselected-pressed-state-layer-opacity:
        map.get($deps, md-sys-state, pressed-state-layer-opacity)
  );
}

@use '../../token-definition';
@use 'sass:map';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, plain-tooltip);

/// Generates the tokens for MDC plain-tooltip
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of tokens for the MDC plain-tooltip
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $mdc-tokens: values($systems, $exclude-hardcoded);

  @return token-definition.namespace-tokens($prefix, $mdc-tokens, $token-slots);
}

@function values($deps, $exclude-hardcoded-values: false) {
  @return (
    container-color: map.get($deps, md-sys-color, inverse-surface),
    container-shape: map.get($deps, md-sys-shape, corner-extra-small),
    supporting-text-color: map.get($deps, md-sys-color, inverse-on-surface),
    supporting-text-font: map.get($deps, md-sys-typescale, body-small-font),
    supporting-text-line-height: map.get($deps, md-sys-typescale, body-small-line-height),
    supporting-text-size: map.get($deps, md-sys-typescale, body-small-size),
    supporting-text-tracking: map.get($deps, md-sys-typescale, body-small-tracking),
    // Warning: risk of reduced fidelity from using this composite typography token.
    // Tokens md.comp.plain-tooltip.supporting-text.tracking cannot be represented in the
    // "font" property shorthand. Consider using the discrete properties instead.
    supporting-text-type: if(
        $exclude-hardcoded-values,
        null,
        map.get($deps, md-sys-typescale, body-small-weight)
        map.get($deps, md-sys-typescale, body-small-size) #{'/'} map.get(
            $deps,
            md-sys-typescale,
            body-small-line-height
        ) map.get($deps, md-sys-typescale, body-small-font)
    ),
    supporting-text-weight: map.get($deps, md-sys-typescale, body-small-weight)
  );
}

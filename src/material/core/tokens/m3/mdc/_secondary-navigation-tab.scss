@use '../../token-definition';
@use 'sass:map';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, secondary-navigation-tab);

/// Generates the tokens for MDC tab
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of tokens for the MDC tab
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $mdc-tokens: values($systems, $exclude-hardcoded);

  @return token-definition.namespace-tokens($prefix, $mdc-tokens, $token-slots);
}

@function values($deps, $exclude-hardcoded-values: false) {
  @return (
    active-label-text-color: map.get($deps, md-sys-color, on-surface),
    container-color: map.get($deps, md-sys-color, surface),
    container-elevation: map.get($deps, md-sys-elevation, level0),
    container-height: if($exclude-hardcoded-values, null, 48px),
    container-shadow-color: map.get($deps, md-sys-color, shadow),
    container-shape: map.get($deps, md-sys-shape, corner-none),
    divider-color: map.get($deps, md-sys-color, surface-variant),
    divider-height: if($exclude-hardcoded-values, null, 1px),
    focus-label-text-color: map.get($deps, md-sys-color, on-surface),
    focus-state-layer-color: map.get($deps, md-sys-color, on-surface),
    focus-state-layer-opacity: map.get($deps, md-sys-state, focus-state-layer-opacity),
    hover-label-text-color: map.get($deps, md-sys-color, on-surface),
    hover-state-layer-color: map.get($deps, md-sys-color, on-surface),
    hover-state-layer-opacity: map.get($deps, md-sys-state, hover-state-layer-opacity),
    inactive-label-text-color: map.get($deps, md-sys-color, on-surface-variant),
    label-text-font: map.get($deps, md-sys-typescale, title-small-font),
    label-text-line-height: map.get($deps, md-sys-typescale, title-small-line-height),
    label-text-size: map.get($deps, md-sys-typescale, title-small-size),
    label-text-tracking: map.get($deps, md-sys-typescale, title-small-tracking),
    // Warning: risk of reduced fidelity from using this composite typography token.
    // Tokens md.comp.secondary-navigation-tab.label-text.tracking cannot be represented
    // in the "font" property shorthand. Consider using the discrete properties instead.
    label-text-type: if(
        $exclude-hardcoded-values,
        null,
        map.get($deps, md-sys-typescale, title-small-weight)
        map.get($deps, md-sys-typescale, title-small-size) #{'/'} map.get(
            $deps,
            md-sys-typescale,
            title-small-line-height
        ) map.get($deps, md-sys-typescale, title-small-font)
    ),
    label-text-weight: map.get($deps, md-sys-typescale, title-small-weight),
    pressed-label-text-color: map.get($deps, md-sys-color, on-surface),
    pressed-state-layer-color: map.get($deps, md-sys-color, on-surface),
    pressed-state-layer-opacity: map.get($deps, md-sys-state, pressed-state-layer-opacity),
    with-icon-active-icon-color: map.get($deps, md-sys-color, on-surface),
    with-icon-focus-icon-color: map.get($deps, md-sys-color, on-surface),
    with-icon-hover-icon-color: map.get($deps, md-sys-color, on-surface),
    with-icon-icon-size: if($exclude-hardcoded-values, null, 24px),
    with-icon-inactive-icon-color: map.get($deps, md-sys-color, on-surface-variant),
    with-icon-pressed-icon-color: map.get($deps, md-sys-color, on-surface)
  );
}

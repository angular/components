@use 'sass:map';
@use '../../../style/elevation';
@use '../../token-definition';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, elevated-card);

/// Generates the tokens for MDC elevated-card
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of tokens for the MDC elevated-card
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $tokens: values($systems, $exclude-hardcoded);
  $elevation: map.get($tokens, container-elevation);

  @if ($elevation != null) {
    $tokens: map.set($tokens, container-elevation, elevation.get-box-shadow($elevation));
  }

  @return token-definition.namespace-tokens($prefix, $tokens, $token-slots);
}

@function values($deps, $exclude-hardcoded-values: false) {
  $values: (
    container-color: map.get($deps, md-sys-color, surface-container-low),
    container-elevation: map.get($deps, md-sys-elevation, level1),
    container-shadow-color: map.get($deps, md-sys-color, shadow),
    container-shape: map.get($deps, md-sys-shape, corner-medium),
    container-surface-tint-layer-color: map.get($deps, md-sys-color, surface-tint),
    disabled-container-color: map.get($deps, md-sys-color, surface),
    disabled-container-elevation: map.get($deps, md-sys-elevation, level1),
    disabled-container-opacity: if($exclude-hardcoded-values, null, 0.38),
    dragged-container-elevation: map.get($deps, md-sys-elevation, level4),
    dragged-state-layer-color: map.get($deps, md-sys-color, on-surface),
    dragged-state-layer-opacity: map.get($deps, md-sys-state, dragged-state-layer-opacity),
    focus-container-elevation: map.get($deps, md-sys-elevation, level1),
    focus-state-layer-color: map.get($deps, md-sys-color, on-surface),
    focus-state-layer-opacity: map.get($deps, md-sys-state, focus-state-layer-opacity),
    hover-container-elevation: map.get($deps, md-sys-elevation, level2),
    hover-state-layer-color: map.get($deps, md-sys-color, on-surface),
    hover-state-layer-opacity: map.get($deps, md-sys-state, hover-state-layer-opacity),
    icon-color: map.get($deps, md-sys-color, primary),
    icon-size: if($exclude-hardcoded-values, null, 24px),
    pressed-container-elevation: map.get($deps, md-sys-elevation, level1),
    pressed-state-layer-color: map.get($deps, md-sys-color, on-surface),
    pressed-state-layer-opacity: map.get($deps, md-sys-state, pressed-state-layer-opacity)
  );

  @return $values;
}

@use 'sass:map';
@use '../../token-definition';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, list);

/// Generates custom tokens for the mat-list.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of custom tokens for the mat-list
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  // list-item-container-color
  // This does not match the spec, which defines this to be `md.sys.color.surface`.
  // However, this interferes with the use case of placing a list on other components. For example,
  // the bottom sheets container color is `md.sys.color.surface-container-low`. Instead, allow the
  // list to just display the colors for its background.

  // list-item-leading-icon-size
  // Match spec, which has list-item-leading-icon-size of 24px.
  // Current version of tokens (0_161) has 18px.
  $tokens: (
    active-indicator-color: map.get($systems, md-sys-color, secondary-container),
    active-indicator-shape: map.get($systems, md-sys-shape, corner-full),
    list-item-container-color: if($exclude-hardcoded, null, transparent),
    list-item-container-shape: map.get($systems, md-sys-shape, corner-none),
    list-item-disabled-label-text-color: map.get($systems, md-sys-color, on-surface),
    list-item-disabled-label-text-opacity: if($exclude-hardcoded, null, 0.3),
    list-item-disabled-leading-icon-color: map.get($systems, md-sys-color, on-surface),
    list-item-disabled-leading-icon-opacity: if($exclude-hardcoded, null, 0.38),
    list-item-disabled-state-layer-color: map.get($systems, md-sys-color, on-surface),
    list-item-disabled-state-layer-opacity:
        map.get($systems, md-sys-state, focus-state-layer-opacity),
    list-item-disabled-trailing-icon-color: map.get($systems, md-sys-color, on-surface),
    list-item-disabled-trailing-icon-opacity: if($exclude-hardcoded, null, 0.38),
    list-item-focus-label-text-color: map.get($systems, md-sys-color, on-surface),
    list-item-focus-state-layer-color: map.get($systems, md-sys-color, on-surface),
    list-item-focus-state-layer-opacity: map.get($systems, md-sys-state, focus-state-layer-opacity),
    list-item-hover-label-text-color: map.get($systems, md-sys-color, on-surface),
    list-item-hover-state-layer-color: map.get($systems, md-sys-color, on-surface),
    list-item-hover-state-layer-opacity: map.get($systems, md-sys-state, hover-state-layer-opacity),
    list-item-label-text-color: map.get($systems, md-sys-color, on-surface),
    list-item-label-text-font: map.get($systems, md-sys-typescale, body-large-font),
    list-item-label-text-line-height: map.get($systems, md-sys-typescale, body-large-line-height),
    list-item-label-text-size: map.get($systems, md-sys-typescale, body-large-size),
    list-item-label-text-tracking: map.get($systems, md-sys-typescale, body-large-tracking),
    list-item-label-text-weight: map.get($systems, md-sys-typescale, body-large-weight),
    list-item-leading-avatar-color: map.get($systems, md-sys-color, primary-container),
    list-item-leading-avatar-shape: map.get($systems, md-sys-shape, corner-full),
    list-item-leading-avatar-size: if($exclude-hardcoded, null, 40px),
    list-item-leading-icon-color: map.get($systems, md-sys-color, on-surface-variant),
    list-item-leading-icon-size: if($exclude-hardcoded, null, 24px),
    list-item-one-line-container-height: if($exclude-hardcoded, null, 56px),
    list-item-selected-trailing-icon-color: map.get($systems, md-sys-color, primary),
    list-item-supporting-text-color: map.get($systems, md-sys-color, on-surface-variant),
    list-item-supporting-text-font: map.get($systems, md-sys-typescale, body-medium-font),
    list-item-supporting-text-line-height:
        map.get($systems, md-sys-typescale, body-medium-line-height),
    list-item-supporting-text-size: map.get($systems, md-sys-typescale, body-medium-size),
    list-item-supporting-text-tracking: map.get($systems, md-sys-typescale, body-medium-tracking),
    list-item-supporting-text-weight: map.get($systems, md-sys-typescale, body-medium-weight),
    list-item-three-line-container-height: if($exclude-hardcoded, null, 88px),
    list-item-trailing-icon-color: map.get($systems, md-sys-color, on-surface-variant),
    list-item-trailing-icon-size: if($exclude-hardcoded, null, 24px),
    list-item-trailing-supporting-text-color: map.get($systems, md-sys-color, on-surface-variant),
    list-item-trailing-supporting-text-font: map.get($systems, md-sys-typescale, label-small-font),
    list-item-trailing-supporting-text-line-height:
        map.get($systems, md-sys-typescale, label-small-line-height),
    list-item-trailing-supporting-text-size: map.get($systems, md-sys-typescale, label-small-size),
    list-item-trailing-supporting-text-tracking:
        map.get($systems, md-sys-typescale, label-small-tracking),
    list-item-trailing-supporting-text-weight:
        map.get($systems, md-sys-typescale, label-small-weight),
    list-item-two-line-container-height: if($exclude-hardcoded, null, 72px),
  );

  @return token-definition.namespace-tokens($prefix, $tokens, $token-slots);
}

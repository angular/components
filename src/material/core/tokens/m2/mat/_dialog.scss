@use '../../token-definition';
@use '../../../style/elevation';
@use '../../../style/sass-utils';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, dialog);

// Tokens that can't be configured through Angular Material's current theming API,
// but may be in a future version of the theming API.
@function get-unthemable-tokens() {
  @return (
    container-elevation-shadow: elevation.get-box-shadow(24),
    container-max-width: 80vw,
    container-small-max-width: 80vw,
    container-min-width: 0,
    actions-alignment: start,
    actions-padding: 8px,
    content-padding: 20px 24px,
    with-actions-content-padding: 20px 24px,

    // Note: the CSS class is `title` while the M2 tokens call it `subhead`.
    // M3 calls it `headline` which is what we're aligning with.
    headline-padding: 0 24px 9px,
  );
}

// Tokens that can be configured through Angular Material's color theming API.
@function get-color-tokens($theme) {
  @return ();
}

// Tokens that can be configured through Angular Material's typography theming API.
@function get-typography-tokens($theme) {
  @return ();
}

// Tokens that can be configured through Angular Material's density theming API.
@function get-density-tokens($theme) {
  @return ();
}

// Combines the tokens generated by the above functions into a single map with placeholder values.
// This is used to create token slots.
@function get-token-slots() {
  @return sass-utils.deep-merge-all(
      get-unthemable-tokens(),
      get-color-tokens(token-definition.$placeholder-color-config),
      get-typography-tokens(token-definition.$placeholder-typography-config),
      get-density-tokens(token-definition.$placeholder-density-config)
  );
}

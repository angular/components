@use 'sass:map';
@use '../core/style/sass-utils';
@use '../core/tokens/m3-utils';
@use '../core/style/elevation';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, fab);

/// Generates custom tokens for the mat-fab.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of custom tokens for the mat-fab
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $tokens: (
    foreground-color: map.get($systems, md-sys-color, on-primary-container),
    state-layer-color: map.get($systems, md-sys-color, on-primary-container),
    ripple-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-primary-container),
      $alpha: map.get($systems, md-sys-state, pressed-state-layer-opacity)
    ),
    disabled-state-container-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-surface), $alpha: 0.12),
    disabled-state-foreground-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-surface), $alpha: 0.38),
    container-color: map.get($systems, md-sys-color, primary-container),
    container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
    container-shape: map.get($systems, md-sys-shape, corner-large),
    focus-container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
    focus-state-layer-opacity: map.get($systems, md-sys-state, focus-state-layer-opacity),
    hover-container-elevation-shadow: map.get($systems, md-sys-elevation, level4),
    hover-state-layer-opacity: map.get($systems, md-sys-state, hover-state-layer-opacity),
    pressed-container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
    pressed-state-layer-opacity: map.get($systems, md-sys-state, pressed-state-layer-opacity),
  );

  $variant-tokens: (
    // Color variants
    primary: (), // Default, no overrides needed.
    secondary: (
      foreground-color: map.get($systems, md-sys-color, on-secondary-container),
      state-layer-color: map.get($systems, md-sys-color, on-secondary-container),
      ripple-color: sass-utils.safe-color-change(
          map.get($systems, md-sys-color, on-secondary-container),
        $alpha: map.get($systems, md-sys-state, pressed-state-layer-opacity)
      ),
      container-color: map.get($systems, md-sys-color, secondary-container),
      container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
      container-shape: map.get($systems, md-sys-shape, corner-large),
      focus-container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
      focus-state-layer-opacity: map.get($systems, md-sys-state, focus-state-layer-opacity),
      hover-container-elevation-shadow: map.get($systems, md-sys-elevation, level4),
      hover-state-layer-opacity: map.get($systems, md-sys-state, hover-state-layer-opacity),
      pressed-container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
    ),
    tertiary: (
      foreground-color: map.get($systems, md-sys-color, on-tertiary-container),
      state-layer-color: map.get($systems, md-sys-color, on-tertiary-container),
      ripple-color: sass-utils.safe-color-change(
          map.get($systems, md-sys-color, on-tertiary-container),
        $alpha: map.get($systems, md-sys-state, pressed-state-layer-opacity)
      ),
      container-color: map.get($systems, md-sys-color, tertiary-container),
      container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
      container-shape: map.get($systems, md-sys-shape, corner-large),
      focus-container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
      focus-state-layer-opacity: map.get($systems, md-sys-state, focus-state-layer-opacity),
      hover-container-elevation-shadow: map.get($systems, md-sys-elevation, level4),
      hover-state-layer-opacity: map.get($systems, md-sys-state, hover-state-layer-opacity),
      pressed-container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
    )
  );

  $elevation-tokens: (
    container-elevation-shadow,
    focus-container-elevation-shadow,
    hover-container-elevation-shadow,
    pressed-container-elevation-shadow,
  );

  @each $token in $elevation-tokens {
    $elevation: map.get($tokens, $token);

    @if ($elevation != null) {
      $tokens: map.set($tokens, $token, elevation.get-box-shadow($elevation));
    }
  }

  @return m3-utils.namespace($prefix, ($tokens, $variant-tokens), $token-slots);
}

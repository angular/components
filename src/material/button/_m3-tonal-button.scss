@use 'sass:map';
@use '../core/style/sass-utils';
@use '../core/tokens/m3-utils';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, tonal-button);

/// Generates custom tokens for the mat-flat-button.
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of custom tokens for the mat-flat-button
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $tokens: (
    container-color: map.get($systems, md-sys-color, secondary-container),
    container-height: if($exclude-hardcoded, null, 40px),
    container-shape: map.get($systems, md-sys-shape, corner-full),
    disabled-container-color:
        sass-utils.safe-color-change(map.get($systems, md-sys-color, on-surface), $alpha: 0.12),
    disabled-label-text-color:
        sass-utils.safe-color-change(map.get($systems, md-sys-color, on-surface), $alpha: 0.38),
    disabled-state-layer-color: map.get($systems, md-sys-color, on-surface-variant),
    focus-state-layer-opacity: map.get($systems, md-sys-state, focus-state-layer-opacity),
    horizontal-padding: m3-utils.hardcode(24px, $exclude-hardcoded),
    hover-state-layer-opacity: map.get($systems, md-sys-state, hover-state-layer-opacity),
    icon-offset: m3-utils.hardcode(-8px, $exclude-hardcoded),
    icon-spacing: m3-utils.hardcode(8px, $exclude-hardcoded),
    label-text-color: map.get($systems, md-sys-color, on-secondary-container),
    label-text-font: map.get($systems, md-sys-typescale, label-large-font),
    label-text-size: map.get($systems, md-sys-typescale, label-large-size),
    label-text-tracking: map.get($systems, md-sys-typescale, label-large-tracking),
    label-text-weight: map.get($systems, md-sys-typescale, label-large-weight),
    pressed-state-layer-opacity: map.get($systems, md-sys-state, pressed-state-layer-opacity),
    ripple-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-secondary-container),
        $alpha: map.get($systems, md-sys-state, pressed-state-layer-opacity)),
    state-layer-color: map.get($systems, md-sys-color, on-secondary-container),
  );

  $variant-tokens: (
    // Color variants:
    primary: (),
    secondary: (),
    tertiary: (
      container-color: map.get($systems, md-sys-color, tertiary-container),
      label-text-color: map.get($systems, md-sys-color, on-tertiary-container),
      state-layer-color: map.get($systems, md-sys-color, on-tertiary-container),
      ripple-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-tertiary-container),
        $alpha: map.get($systems, md-sys-state, pressed-state-layer-opacity)
      ),
    ),
    error: (
      container-color: map.get($systems, md-sys-color, error-container),
      label-text-color: map.get($systems, md-sys-color, on-error-container),
      state-layer-color: map.get($systems, md-sys-color, on-error-container),
      ripple-color: sass-utils.safe-color-change(
        map.get($systems, md-sys-color, on-error-container),
        $alpha: map.get($systems, md-sys-state, pressed-state-layer-opacity)
      ),
    )
  );

  @return m3-utils.namespace($prefix, ($tokens, $variant-tokens), $token-slots);
}

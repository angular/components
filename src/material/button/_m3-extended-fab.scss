@use 'sass:map';
@use '../core/style/elevation';
@use '../core/tokens/m3-utils';

// The prefix used to generate the fully qualified name for tokens in this file.
$prefix: (mat, extended-fab);

/// Generates the tokens for MDC extended-fab
/// @param {Map} $systems The MDC system tokens
/// @param {Boolean} $exclude-hardcoded Whether to exclude hardcoded token values
/// @param {Map} $token-slots Possible token slots
/// @return {Map} A set of tokens for the MDC extended-fab
@function get-tokens($systems, $exclude-hardcoded, $token-slots) {
  $tokens: (
    container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
    container-height: if($exclude-hardcoded, null, 56px),
    container-shape: map.get($systems, md-sys-shape, corner-large),
    focus-container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
    hover-container-elevation-shadow: map.get($systems, md-sys-elevation, level4),
    label-text-font: map.get($systems, md-sys-typescale, label-large-font),
    label-text-size: map.get($systems, md-sys-typescale, label-large-size),
    label-text-tracking: map.get($systems, md-sys-typescale, label-large-tracking),
    label-text-weight: map.get($systems, md-sys-typescale, label-large-weight),
    pressed-container-elevation-shadow: map.get($systems, md-sys-elevation, level3),
  );

  $elevation-tokens: (
    container-elevation-shadow,
    focus-container-elevation-shadow,
    hover-container-elevation-shadow,
    pressed-container-elevation-shadow,
  );

  @each $token in $elevation-tokens {
    $elevation: map.get($tokens, $token);

    @if ($elevation != null) {
      $tokens: map.set($tokens, $token, elevation.get-box-shadow($elevation));
    }
  }

  $variant-tokens: (
    // Color variants
    primary: (), // Default, no overrides needed.
    secondary: (
      container-height: if($exclude-hardcoded, null, 56px),
      container-shape: map.get($systems, md-sys-shape, corner-large),
      label-text-font: map.get($systems, md-sys-typescale, label-large-font),
      label-text-size: map.get($systems, md-sys-typescale, label-large-size),
      label-text-tracking: map.get($systems, md-sys-typescale, label-large-tracking),
      label-text-weight: map.get($systems, md-sys-typescale, label-large-weight),
    ),
    tertiary: (
      container-height: if($exclude-hardcoded, null, 56px),
      container-shape: map.get($systems, md-sys-shape, corner-large),
      label-text-font: map.get($systems, md-sys-typescale, label-large-font),
      label-text-size: map.get($systems, md-sys-typescale, label-large-size),
      label-text-tracking: map.get($systems, md-sys-typescale, label-large-tracking),
      label-text-weight: map.get($systems, md-sys-typescale, label-large-weight),
    )
  );

  @return m3-utils.namespace($prefix, ($tokens, $variant-tokens), $token-slots);
}

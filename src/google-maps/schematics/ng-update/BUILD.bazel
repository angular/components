load("//tools:defaults.bzl", "esbuild", "jasmine_node_test", "spec_bundle", "ts_library")

## THIS ONE IS ESM
# By default everything is ESM
# ESBUild needs ESM for bundling. Cannot reliably use CJS as input.
ts_library(
    name = "ng_update_lib",
    srcs = glob(
        ["**/*.ts"],
        exclude = ["**/*.spec.ts"],
    ),
    # Schematics can not yet run in ESM module. For now we continue to use CommonJS.
    # TODO(ESM): remove this once the Angular CLI supports ESM schematics.
    devmode_module = "commonjs",
    deps = [
        "@npm//@angular-devkit/core",
        "@npm//@angular-devkit/schematics",
        "@npm//@schematics/angular",
        "@npm//@types/node",
        "@npm//typescript",
    ],
)

esbuild(
    name = "ng_update_index",
    entry_point = ":index.ts",
    external = [
        "@schematics/angular",
        "@angular-devkit/schematics",
        "@angular-devkit/core",
        "typescript",
    ],
    # TODO: Switch to ESM when Angular CLI supports it.
    format = "cjs",
    output = "index_bundled.js",
    platform = "node",
    target = "es2015",
    visibility = ["//src/google-maps/schematics:__pkg__"],
    deps = [":ng_update_lib"],
)

ts_library(
    name = "test_lib",
    testonly = True,
    srcs = glob(["**/*.spec.ts"]),
    deps = [
        ":ng_update_lib",
        "@npm//@angular-devkit/core",
        "@npm//@angular-devkit/schematics",
        "@npm//@bazel/runfiles",
        "@npm//@types/jasmine",
        "@npm//@types/node",
        "@npm//@types/shelljs",
    ],
)

spec_bundle(
    name = "spec_bundle",
    external = [
        "*/paths.js",
        "shelljs",
        "@angular-devkit/core/node",
    ],
    platform = "cjs-legacy",
    target = "es2020",
    deps = [":test_lib"],
)

jasmine_node_test(
    name = "test",
    data = [
        ":ng_update_index",
        "//src/google-maps/schematics:schematics_assets",
        "@npm//shelljs",
    ],
    deps = [
        ":spec_bundle",
    ],
)

load("//tools:defaults.bzl", "ng_package", "ng_web_test_suite")
load("//tools:defaults2.bzl", "ng_project", "ts_project")
load("@aspect_rules_ts//ts:defs.bzl", rules_js_tsconfig = "ts_config")

package(default_visibility = ["//visibility:public"])

rules_js_tsconfig(
    name = "tsconfig-test",
    src = "tsconfig-test.json",
    deps = [
        "//:node_modules/@types/google.maps",
        "//:node_modules/@types/jasmine",
        "//:node_modules/@types/node",
        "//src:test-tsconfig",
    ],
)

ng_project(
    name = "google-maps",
    srcs = glob(
        ["**/*.ts"],
        exclude = [
            "**/*.spec.ts",
        ],
    ),
    deps = [
        "//:node_modules/@angular/common",
        "//:node_modules/@angular/core",
        "//:node_modules/@types/google.maps",
        "//:node_modules/rxjs",
        "//src:dev_mode_types",
    ],
)

# Creates the @angular/google-maps package published to npm
ng_package(
    name = "npm_package",
    package_name = "@angular/google-maps",
    srcs = ["package.json"],
    nested_packages = ["//src/google-maps/schematics:npm_package"],
    tags = ["release-package"],
    visibility = [
        "//:__pkg__",
        "//goldens:__pkg__",
        "//integration:__subpackages__",
    ],
    deps = [":google-maps_legacy"],
)

filegroup(
    name = "source-files",
    srcs = glob(["**/*.ts"]),
)

ts_project(
    name = "unit_test_sources",
    testonly = True,
    srcs = glob(
        ["**/*.spec.ts"],
        exclude = ["**/*.e2e.spec.ts"],
    ),
    tsconfig = ":tsconfig-test",
    deps = [
        ":google-maps",
        "//:node_modules/@angular/core",
        "//:node_modules/@angular/platform-browser",
        "//src/google-maps/testing",
    ],
)

ng_web_test_suite(
    name = "unit_tests",
    deps = [":unit_test_sources"],
)
